generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                    Int              @id @default(autoincrement())
  nombre                String
  email                 String           @unique
  password              String
  tipo                  String           // Ejemplo: "particular", "profesional"
  creadoEn              DateTime         @default(now())
  avisos                Adiso[]
  comentarios           Comentario[]
  mensajesEnviados      Mensaje[]        @relation("mensajesEnviados")
  mensajesRecibidos     Mensaje[]        @relation("mensajesRecibidos")
  valoracionesRecibidas Valoracion[]     @relation("valoracionesRecibidas")
  valoracionesDadas     Valoracion[]     @relation("valoracionesDadas")
  compras               Transaccion[]    @relation("compras")
  ventas                Transaccion[]    @relation("ventas")
}

model Adiso {
  id          Int        @id @default(autoincrement())
  titulo      String
  descripcion String
  categoria   Categoria  @relation(fields: [categoriaId], references: [id])
  categoriaId Int
  precio      Float?
  contacto    String
  ubicacion   String?
  estado      String     // Ejemplo: "activo", "inactivo", "vendido"
  expiracion  DateTime?
  creadoEn    DateTime   @default(now())
  usuario     Usuario    @relation(fields: [usuarioId], references: [id])
  usuarioId   Int
  comentarios Comentario[]
  imagenes    Imagen[]
  @@index([titulo], name: "idx_titulo")
  @@index([categoriaId], name: "idx_categoria")
}

model Categoria {
  id            Int          @id @default(autoincrement())
  nombre        String
  parentId      Int?
  parent        Categoria?    @relation("Subcategorias", fields: [parentId], references: [id])
  subcategorias Categoria[]   @relation("Subcategorias")
  avisos        Adiso[]
}

model Comentario {
  id        Int      @id @default(autoincrement())
  contenido String
  creadoEn  DateTime @default(now())
  usuario   Usuario  @relation(fields: [usuarioId], references: [id])
  usuarioId Int
  adiso     Adiso    @relation(fields: [adisoId], references: [id])
  adisoId   Int
}

model Imagen {
  id        Int      @id @default(autoincrement())
  url       String
  adiso     Adiso    @relation(fields: [adisoId], references: [id])
  adisoId   Int
}

model Mensaje {
  id            Int      @id @default(autoincrement())
  contenido     String
  enviadoEn     DateTime @default(now())
  remitente     Usuario  @relation("mensajesEnviados", fields: [remitenteId], references: [id])
  remitenteId   Int
  destinatario  Usuario  @relation("mensajesRecibidos", fields: [destinatarioId], references: [id])
  destinatarioId Int
}

model Valoracion {
  id            Int      @id @default(autoincrement())
  puntuacion    Int
  comentario    String?
  creadoEn      DateTime @default(now())
  usuario       Usuario  @relation("valoracionesRecibidas", fields: [usuarioId], references: [id])
  usuarioId     Int
  evaluador     Usuario  @relation("valoracionesDadas", fields: [evaluadorId], references: [id])
  evaluadorId   Int
}

model Transaccion {
  id          Int      @id @default(autoincrement())
  monto       Float
  fecha       DateTime @default(now())
  comprador   Usuario  @relation("compras", fields: [compradorId], references: [id])
  compradorId Int
  vendedor    Usuario  @relation("ventas", fields: [vendedorId], references: [id])
  vendedorId  Int
}