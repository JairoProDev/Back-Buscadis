generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                    Int           @id @default(autoincrement())
  nombre                String
  email                 String        @unique
  password              String
  tipo                  String
  creadoEn              DateTime      @default(now())
  avisos                Adiso[]
  comentarios           Comentario[]
  mensajesRecibidos     Mensaje[]     @relation("mensajesRecibidos")
  mensajesEnviados      Mensaje[]     @relation("mensajesEnviados")
  compras               Transaccion[] @relation("compras")
  ventas                Transaccion[] @relation("ventas")
  valoracionesDadas     Valoracion[]  @relation("valoracionesDadas")
  valoracionesRecibidas Valoracion[]  @relation("valoracionesRecibidas")
}

model Adiso {
  id          Int          @id @default(autoincrement())
  titulo      String
  descripcion String
  precio      Float?
  contacto    String
  ubicacion   String?
  creadoEn    DateTime     @default(now())
  categoriaId Int
  estado      String
  expiracion  DateTime?
  usuarioId   Int
  categoria   Categoria    @relation(fields: [categoriaId], references: [id])
  usuario     Usuario      @relation(fields: [usuarioId], references: [id])
  comentarios Comentario[]
  imagenes    Imagen[]

  @@index([titulo], map: "idx_titulo")
  @@index([categoriaId], map: "idx_categoria")
}

model Categoria {
  id            Int         @id @default(autoincrement())
  nombre        String
  parentId      Int?
  avisos        Adiso[]
  parent        Categoria?  @relation("Subcategorias", fields: [parentId], references: [id])
  subcategorias Categoria[] @relation("Subcategorias")
}

model Comentario {
  id        Int      @id @default(autoincrement())
  contenido String
  creadoEn  DateTime @default(now())
  usuarioId Int
  adisoId   Int
  adiso     Adiso    @relation(fields: [adisoId], references: [id])
  usuario   Usuario  @relation(fields: [usuarioId], references: [id])
}

model Imagen {
  id      Int    @id @default(autoincrement())
  url     String
  adisoId Int
  adiso   Adiso  @relation(fields: [adisoId], references: [id])
}

model Mensaje {
  id             Int      @id @default(autoincrement())
  contenido      String
  enviadoEn      DateTime @default(now())
  remitenteId    Int
  destinatarioId Int
  destinatario   Usuario  @relation("mensajesRecibidos", fields: [destinatarioId], references: [id])
  remitente      Usuario  @relation("mensajesEnviados", fields: [remitenteId], references: [id])
}

model Valoracion {
  id          Int      @id @default(autoincrement())
  puntuacion  Int
  comentario  String?
  creadoEn    DateTime @default(now())
  usuarioId   Int
  evaluadorId Int
  evaluador   Usuario  @relation("valoracionesDadas", fields: [evaluadorId], references: [id])
  usuario     Usuario  @relation("valoracionesRecibidas", fields: [usuarioId], references: [id])
}

model Transaccion {
  id          Int      @id @default(autoincrement())
  monto       Float
  fecha       DateTime @default(now())
  compradorId Int
  vendedorId  Int
  comprador   Usuario  @relation("compras", fields: [compradorId], references: [id])
  vendedor    Usuario  @relation("ventas", fields: [vendedorId], references: [id])
}
